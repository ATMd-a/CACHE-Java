private void txtAmountDepoActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        String accountName = wallet.getAccountNameHolder();
        String depositMethod = (String) cmbDepositMethods.getSelectedItem();
        String partnerOutlet = (String) cmbPartnerOutlet.getSelectedItem();
        String depositAmountStr = txtAmountDepo.getText();
        
        if (!depositAmountStr.matches("\\d+(\\.\\d+)?")) {
            JOptionPane.showMessageDialog(null, "Invalid Input! Please Enter Numeric Amount. ", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        double depositAmount = Double.parseDouble(depositAmountStr);
        if (depositAmount <= 0) {
            JOptionPane.showMessageDialog(null, "Invalid deposit amount!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
        wallet.performTransaction(depositAmount);
        
        txtAreaDeposit.setText(
        "Name: " + accountName + "\n" +
        "Deposit Method: " + depositMethod + "\n" +
        "Partner Outlet: " + partnerOutlet + "\n" +
        "Deposited Amount: " + depositAmount + "\n" +
        "New Balance: " + wallet.getBalance()
    );
//        
        
    }  

private void btSendActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        double amountEntered = Double.parseDouble(txtAmountDepo.getText());
        
        if (amountEntered > 0){
            JOptionPane.showMessageDialog(null, "Deposit Successfull", "Transaction", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Insufficient funds!", "ERROR", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }      

private void btSend1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        double enteredAmount = Double.parseDouble(txtAmount.getText());
        
        String receiver = txtSMobileNumber.getText();
        double currentBalance = wallet.getBalance(); 
        double totalBalance = currentBalance - enteredAmount;
        
        if (totalBalance < 0) {
            JOptionPane.showMessageDialog(null, "Insufficient funds!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
        }
        
        txtAreaSend.setText(
        "Receiver: " + receiver + "\n" +
        "Saks (Balance): " + currentBalance + "\n" +
        "You are about to send: " + enteredAmount + "\n" +
        "Total balance: " + totalBalance );
    }                

private void btDepositActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        double amountEntered = Double.parseDouble(txtAmountDepo.getText());
        if (amountEntered > 0){
            JOptionPane.showMessageDialog(null, "Deposit Successfull", "Transaction", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Please, enter a valid number greater than 0.", "ERROR", javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }            
private void ckbProtectFeeActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        String billName = cmbBills.getSelectedItem().toString();
        String billerName = cmbBiller.getSelectedItem().toString();
    
        
        double amount = Double.parseDouble(txtAmountDepo.getText());
        String accountNumber = txtAccountNo.getText();

      
        if (!accountNumber.isEmpty() && amount > 0) {   
            if (ckbProtectFee.isSelected()) {
                amount += amount * 0.02; 
            }

           
            txtAreaBills.setText("Bill: " + billName + "\n" +
                                 "Biller Name: " + billerName + "\n" +
                                 "Amount: " + amount + "\n" +
                                 "Account Number: " + accountNumber);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter a valid account number and amount", "Input Error", JOptionPane.WARNING_MESSAGE);
        }
    }  




private void btLSignupActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        frmSignUp.setVisible(true); // Show the original frame
        frmLogin.dispose();
        
        String mobileNo = txtSMobileNumber.getText();
                String username = txtSUsername.getText();
                String password = new String(txtSPassword.getPassword());
        Ewallet newAccount = new Ewallet("Default Account", mobileNo, password, 0.0);
        AccountManager.addAccount(username, newAccount);
        JOptionPane.showMessageDialog(null, "Account created successfully!", "Sign Up", JOptionPane.INFORMATION_MESSAGE);
        
    }                           





private void btLLoginActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:   
        String username = txtLUsername.getText();
        String password = new String(txtLPassword.getPassword());
        
        Account account = AccountManager.getAccount(username);
        
        if (account != null && account.authenticate(password)) {
                    JOptionPane.showMessageDialog(null, "Login successful!", "Login", JOptionPane.INFORMATION_MESSAGE);  
                } else {    
                    JOptionPane.showMessageDialog(null, "Invalid username or password.", "Login Error", JOptionPane.ERROR_MESSAGE);
                }
        //Database functions
        
    

        
    }                   
