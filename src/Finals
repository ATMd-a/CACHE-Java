/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import javax.swing.UIManager;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author althea
 */
public class Finals extends javax.swing.JFrame {
    private Connection connection = null;
    
    public Finals() {
        initComponents();
        openDatabaseConnection();

        
        //UI Design
        txtLMobileNo.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "11-Digit Mobile No");
        txtLMobileNo.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/person.svg"));
        txtLMobileNo.putClientProperty("JComponent.style", "padding: 5 10 5 10;");
        txtLMobileNo.putClientProperty(FlatClientProperties.TEXT_FIELD_SHOW_CLEAR_BUTTON, true);     
        txtLPassword.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Password");
        txtLPassword.putClientProperty(FlatClientProperties.STYLE, "showRevealButton:true");

        txtSMobileNumber.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "11-Digit Mobile No");
        txtSMobileNumber.putClientProperty(FlatClientProperties.TEXT_FIELD_LEADING_ICON, new FlatSVGIcon("svg/person.svg"));
        txtSUsername.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Username");
        txtSPassword.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Password");
        txtSPassword.putClientProperty(FlatClientProperties.STYLE, "showRevealButton:true");
    }
    
    private void openDatabaseConnection() {
        try {
            String url = "jdbc:mysql://localhost:3306/ewallet";
            String user = "root";
            String pass = "Silver.pass1";

            connection = DriverManager.getConnection(url, user, pass);
            System.out.println("Database connected successfully!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error connecting to database: " +
                    e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        frmMainWindow = new javax.swing.JFrame();
        tbMenu = new javax.swing.JTabbedPane();
        pnlDashBoard = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        lblBalance = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel36 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        pnlSend = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        txtAmount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        pnlSSummary = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        ckbSend = new javax.swing.JCheckBox();
        txtAreaSend = new javax.swing.JTextArea();
        btSend = new javax.swing.JButton();
        radS200 = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        radS20 = new javax.swing.JRadioButton();
        radS50 = new javax.swing.JRadioButton();
        radS100 = new javax.swing.JRadioButton();
        radS500 = new javax.swing.JRadioButton();
        radS1000 = new javax.swing.JRadioButton();
        txtSNumber = new javax.swing.JTextField();
        btSContinue = new javax.swing.JButton();
        jLabel50 = new javax.swing.JLabel();
        cmbSelectAccount = new javax.swing.JComboBox<>();
        lblCurBal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        pnlDeposit = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        cmbDepositMethods = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmbPartnerOutlet = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        btDeposit = new javax.swing.JButton();
        jLabel64 = new javax.swing.JLabel();
        ckbDeposit = new javax.swing.JCheckBox();
        txtAreaDeposit = new javax.swing.JTextArea();
        txtAmountDepo = new javax.swing.JTextField();
        radD1000 = new javax.swing.JRadioButton();
        radD100 = new javax.swing.JRadioButton();
        radD500 = new javax.swing.JRadioButton();
        radD50 = new javax.swing.JRadioButton();
        radD200 = new javax.swing.JRadioButton();
        radD20 = new javax.swing.JRadioButton();
        jLabel28 = new javax.swing.JLabel();
        btDContinue = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        pnlBills = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        txtAccountNo = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        jLabel79 = new javax.swing.JLabel();
        cmbBills = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        cmbBiller = new javax.swing.JComboBox<>();
        jPanel36 = new javax.swing.JPanel();
        btPaybills = new javax.swing.JButton();
        jLabel80 = new javax.swing.JLabel();
        ckbPaybills = new javax.swing.JCheckBox();
        txtAreaBills = new javax.swing.JTextArea();
        txtAmountBills = new javax.swing.JTextField();
        ckbProtectFee = new javax.swing.JCheckBox();
        btBContinue = new javax.swing.JButton();
        lblCurBal1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pnlTransaction = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        pnlAccount = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        txtAMobileNo = new javax.swing.JTextField();
        txtAUsername = new javax.swing.JTextField();
        btSaveEdit = new javax.swing.JButton();
        txtAPassword = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        btDeleteAccount = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        pnlNavigator = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        tbtDashboard = new javax.swing.JToggleButton();
        jPanel18 = new javax.swing.JPanel();
        tbtSend = new javax.swing.JToggleButton();
        jPanel19 = new javax.swing.JPanel();
        tbtDeposit = new javax.swing.JToggleButton();
        jPanel20 = new javax.swing.JPanel();
        tbtBills = new javax.swing.JToggleButton();
        jPanel21 = new javax.swing.JPanel();
        tbtTransaction = new javax.swing.JToggleButton();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        tbtAccount = new javax.swing.JToggleButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        frmLogin = new javax.swing.JFrame();
        pnlLogIn = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtLMobileNo = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtLPassword = new javax.swing.JPasswordField();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        btLLogin = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btLSignup = new javax.swing.JButton();
        frmSignUp = new javax.swing.JFrame();
        pnlSignUp = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel33 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        txtSUsername = new javax.swing.JTextField();
        jPanel37 = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        txtSPassword = new javax.swing.JPasswordField();
        btSSignup = new javax.swing.JButton();
        jPanel41 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        txtSMobileNumber = new javax.swing.JTextField();
        jPanel40 = new javax.swing.JPanel();
        pnlBG = new javax.swing.JPanel();
        btSignUp = new javax.swing.JButton();
        btLogin = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();

        frmMainWindow.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frmMainWindow.setBounds(new java.awt.Rectangle(0, 0, 900, 600));
        frmMainWindow.setLocation(new java.awt.Point(300, 120));
        frmMainWindow.setResizable(false);
        frmMainWindow.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                frmMainWindowWindowClosing(evt);
            }
        });
        frmMainWindow.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbMenu.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        tbMenu.setEnabled(false);
        tbMenu.setPreferredSize(new java.awt.Dimension(100, 600));

        pnlDashBoard.setBackground(new java.awt.Color(237, 247, 246));
        pnlDashBoard.setPreferredSize(new java.awt.Dimension(530, 500));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));
        jPanel24.setForeground(new java.awt.Color(255, 255, 255));

        lblBalance.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        lblBalance.setText("000.00");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel25.setText("Wallet Balance");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblBalance)
                .addGap(22, 22, 22))
        );

        jPanel13.add(jPanel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 16, 550, 100));

        jButton12.setBackground(new java.awt.Color(53, 255, 105));
        jButton12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton12.setText("Cash In");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 88, 34));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));
        jPanel25.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel25.setPreferredSize(new java.awt.Dimension(100, 100));

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Method", "Recipient", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel36.setText("Recent Transaction");

        jButton11.setBackground(new java.awt.Color(39, 93, 173));
        jButton11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("View All");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel25Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Welcome in,");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblName.setText("User!");

        javax.swing.GroupLayout pnlDashBoardLayout = new javax.swing.GroupLayout(pnlDashBoard);
        pnlDashBoard.setLayout(pnlDashBoardLayout);
        pnlDashBoardLayout.setHorizontalGroup(
            pnlDashBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDashBoardLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlDashBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDashBoardLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnlDashBoardLayout.setVerticalGroup(
            pnlDashBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDashBoardLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlDashBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(lblName))
                .addGap(11, 11, 11)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tbMenu.addTab("DashBoard", pnlDashBoard);

        pnlSend.setBackground(new java.awt.Color(237, 247, 246));

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));
        jPanel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel27.setPreferredSize(new java.awt.Dimension(670, 450));
        jPanel27.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAmount.setName(""); // NOI18N
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });
        jPanel27.add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 240, 41));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("Quick amount");
        jPanel27.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 100, -1));

        jSeparator8.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator8.setForeground(new java.awt.Color(0, 0, 0));
        jPanel27.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 640, 10));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("Send to any account");
        jPanel27.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 250, -1));

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText("Mobile Number");
        jPanel27.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 100, -1));

        pnlSSummary.setBackground(new java.awt.Color(255, 255, 255));
        pnlSSummary.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        pnlSSummary.setEnabled(false);
        pnlSSummary.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel21.setText("Summary");
        pnlSSummary.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 112, -1));

        ckbSend.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ckbSend.setText("I confirm that the details are correct");
        ckbSend.setEnabled(false);
        ckbSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbSendActionPerformed(evt);
            }
        });
        pnlSSummary.add(ckbSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        txtAreaSend.setEditable(false);
        txtAreaSend.setColumns(20);
        txtAreaSend.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAreaSend.setLineWrap(true);
        txtAreaSend.setRows(5);
        txtAreaSend.setBorder(null);
        pnlSSummary.add(txtAreaSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 240, 160));

        btSend.setBackground(new java.awt.Color(53, 255, 105));
        btSend.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btSend.setText("Send");
        btSend.setBorderPainted(false);
        btSend.setEnabled(false);
        btSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSendActionPerformed(evt);
            }
        });
        pnlSSummary.add(btSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 193, 39));

        jPanel27.add(pnlSSummary, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 300, 350));

        buttonGroup2.add(radS200);
        radS200.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radS200.setText("200");
        radS200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radS200ActionPerformed(evt);
            }
        });
        jPanel27.add(radS200, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setText("Enter Amount");
        jPanel27.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 100, -1));

        buttonGroup2.add(radS20);
        radS20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radS20.setText("20");
        radS20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radS20ActionPerformed(evt);
            }
        });
        jPanel27.add(radS20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        buttonGroup2.add(radS50);
        radS50.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radS50.setText("50");
        radS50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radS50ActionPerformed(evt);
            }
        });
        jPanel27.add(radS50, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, -1, -1));

        buttonGroup2.add(radS100);
        radS100.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radS100.setText("100");
        radS100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radS100ActionPerformed(evt);
            }
        });
        jPanel27.add(radS100, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, -1, -1));

        buttonGroup2.add(radS500);
        radS500.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radS500.setText("500");
        radS500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radS500ActionPerformed(evt);
            }
        });
        jPanel27.add(radS500, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, -1));

        buttonGroup2.add(radS1000);
        radS1000.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radS1000.setText("1000");
        radS1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radS1000ActionPerformed(evt);
            }
        });
        jPanel27.add(radS1000, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, -1, -1));

        txtSNumber.setEditable(false);
        txtSNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSNumber.setName(""); // NOI18N
        txtSNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSNumberActionPerformed(evt);
            }
        });
        jPanel27.add(txtSNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 240, 41));

        btSContinue.setBackground(new java.awt.Color(39, 93, 173));
        btSContinue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btSContinue.setForeground(new java.awt.Color(255, 255, 255));
        btSContinue.setText("Continue");
        btSContinue.setBorderPainted(false);
        btSContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSContinueActionPerformed(evt);
            }
        });
        jPanel27.add(btSContinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 193, 39));

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("Select ");
        jPanel27.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 100, -1));

        cmbSelectAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbSelectAccount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an account" }));
        cmbSelectAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelectAccountActionPerformed(evt);
            }
        });
        jPanel27.add(cmbSelectAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 240, 40));

        lblCurBal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCurBal.setText("(Current Bal: 12345678)");
        jPanel27.add(lblCurBal, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 130, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Express Send");

        javax.swing.GroupLayout pnlSendLayout = new javax.swing.GroupLayout(pnlSend);
        pnlSend.setLayout(pnlSendLayout);
        pnlSendLayout.setHorizontalGroup(
            pnlSendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSendLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlSendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnlSendLayout.setVerticalGroup(
            pnlSendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSendLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel7)
                .addGap(11, 11, 11)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tbMenu.addTab("Send", pnlSend);

        pnlDeposit.setBackground(new java.awt.Color(237, 247, 246));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel11.setPreferredSize(new java.awt.Dimension(670, 450));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbDepositMethods.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbDepositMethods.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Deposit Machines", "Conveniences Stores", "Pawnshops", "Sari-Sari Stores" }));
        cmbDepositMethods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepositMethodsActionPerformed(evt);
            }
        });
        jPanel11.add(cmbDepositMethods, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 240, 40));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Enter Amount");
        jPanel11.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 100, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Categories");
        jPanel11.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 70, -1));

        cmbPartnerOutlet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbPartnerOutlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPartnerOutletActionPerformed(evt);
            }
        });
        jPanel11.add(cmbPartnerOutlet, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 240, 40));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Partner Outlets");
        jPanel11.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 100, -1));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));
        jPanel11.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 640, 10));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Deposit");
        jPanel11.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 112, -1));

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));
        jPanel35.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel35.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btDeposit.setBackground(new java.awt.Color(53, 255, 105));
        btDeposit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btDeposit.setText("Deposit");
        btDeposit.setBorderPainted(false);
        btDeposit.setEnabled(false);
        btDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDepositActionPerformed(evt);
            }
        });
        jPanel35.add(btDeposit, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 193, 39));

        jLabel64.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel64.setText("Summary");
        jPanel35.add(jLabel64, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 112, -1));

        ckbDeposit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ckbDeposit.setText("I confirm that the details are correct");
        ckbDeposit.setEnabled(false);
        ckbDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbDepositActionPerformed(evt);
            }
        });
        jPanel35.add(ckbDeposit, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        txtAreaDeposit.setEditable(false);
        txtAreaDeposit.setColumns(20);
        txtAreaDeposit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAreaDeposit.setLineWrap(true);
        txtAreaDeposit.setRows(5);
        txtAreaDeposit.setBorder(null);
        jPanel35.add(txtAreaDeposit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 240, 160));

        jPanel11.add(jPanel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 300, 350));

        txtAmountDepo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAmountDepo.setName(""); // NOI18N
        txtAmountDepo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountDepoActionPerformed(evt);
            }
        });
        jPanel11.add(txtAmountDepo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 240, 41));

        buttonGroup3.add(radD1000);
        radD1000.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radD1000.setText("1000");
        radD1000.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radD1000ActionPerformed(evt);
            }
        });
        jPanel11.add(radD1000, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, -1, -1));

        buttonGroup3.add(radD100);
        radD100.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radD100.setText("100");
        radD100.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radD100ActionPerformed(evt);
            }
        });
        jPanel11.add(radD100, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 330, -1, -1));

        buttonGroup3.add(radD500);
        radD500.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radD500.setText("500");
        radD500.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radD500ActionPerformed(evt);
            }
        });
        jPanel11.add(radD500, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, -1, -1));

        buttonGroup3.add(radD50);
        radD50.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radD50.setText("50");
        radD50.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radD50ActionPerformed(evt);
            }
        });
        jPanel11.add(radD50, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 330, -1, -1));

        buttonGroup3.add(radD200);
        radD200.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radD200.setText("200");
        radD200.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radD200ActionPerformed(evt);
            }
        });
        jPanel11.add(radD200, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, -1, -1));

        buttonGroup3.add(radD20);
        radD20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radD20.setText("20");
        radD20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radD20ActionPerformed(evt);
            }
        });
        jPanel11.add(radD20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, -1, -1));

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("Quick amount");
        jPanel11.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 100, -1));

        btDContinue.setBackground(new java.awt.Color(39, 93, 173));
        btDContinue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btDContinue.setForeground(new java.awt.Color(255, 255, 255));
        btDContinue.setText("Continue");
        btDContinue.setBorderPainted(false);
        btDContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDContinueActionPerformed(evt);
            }
        });
        jPanel11.add(btDContinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 193, 39));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Over the counter");

        javax.swing.GroupLayout pnlDepositLayout = new javax.swing.GroupLayout(pnlDeposit);
        pnlDeposit.setLayout(pnlDepositLayout);
        pnlDepositLayout.setHorizontalGroup(
            pnlDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDepositLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDepositLayout.setVerticalGroup(
            pnlDepositLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDepositLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        tbMenu.addTab("Deposit", pnlDeposit);

        pnlBills.setBackground(new java.awt.Color(237, 247, 246));

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));
        jPanel28.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel28.setPreferredSize(new java.awt.Dimension(670, 450));
        jPanel28.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtAccountNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAccountNo.setName(""); // NOI18N
        jPanel28.add(txtAccountNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 240, 41));

        jLabel75.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel75.setText("Enter Amount");
        jPanel28.add(jLabel75, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 100, -1));

        jLabel76.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel76.setText("Categories");
        jPanel28.add(jLabel76, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 80, -1));

        jLabel78.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel78.setText("Account Number");
        jPanel28.add(jLabel78, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 130, -1));

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));
        jPanel28.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 640, 10));

        jLabel79.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel79.setText("Bills");
        jPanel28.add(jLabel79, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 112, -1));

        cmbBills.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbBills.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electric Utilities", "Water Utilities", "Internet", "Schools" }));
        cmbBills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBillsActionPerformed(evt);
            }
        });
        jPanel28.add(cmbBills, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 240, 40));

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("Biller's");
        jPanel28.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 120, -1));

        cmbBiller.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbBiller.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbBillerActionPerformed(evt);
            }
        });
        jPanel28.add(cmbBiller, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 240, 40));

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));
        jPanel36.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel36.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btPaybills.setBackground(new java.awt.Color(53, 255, 105));
        btPaybills.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btPaybills.setText("Pay");
        btPaybills.setBorderPainted(false);
        btPaybills.setEnabled(false);
        btPaybills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPaybillsActionPerformed(evt);
            }
        });
        jPanel36.add(btPaybills, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 193, 39));

        jLabel80.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel80.setText("Summary");
        jPanel36.add(jLabel80, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 112, -1));

        ckbPaybills.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ckbPaybills.setText("I confirm that the details are correct");
        ckbPaybills.setEnabled(false);
        ckbPaybills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckbPaybillsActionPerformed(evt);
            }
        });
        jPanel36.add(ckbPaybills, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        txtAreaBills.setEditable(false);
        txtAreaBills.setColumns(20);
        txtAreaBills.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAreaBills.setLineWrap(true);
        txtAreaBills.setRows(5);
        txtAreaBills.setInheritsPopupMenu(true);
        jPanel36.add(txtAreaBills, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 240, 160));

        jPanel28.add(jPanel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, 300, 350));

        txtAmountBills.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAmountBills.setName(""); // NOI18N
        jPanel28.add(txtAmountBills, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 240, 41));

        ckbProtectFee.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ckbProtectFee.setText("Protect your fee? add 2% of your bill");
        jPanel28.add(ckbProtectFee, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, -1, -1));

        btBContinue.setBackground(new java.awt.Color(39, 93, 173));
        btBContinue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btBContinue.setForeground(new java.awt.Color(255, 255, 255));
        btBContinue.setText("Continue");
        btBContinue.setBorderPainted(false);
        btBContinue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBContinueActionPerformed(evt);
            }
        });
        jPanel28.add(btBContinue, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 193, 39));

        lblCurBal1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCurBal1.setText("(Current Bal: 12345678)");
        jPanel28.add(lblCurBal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 300, 130, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("Pay Bills");

        javax.swing.GroupLayout pnlBillsLayout = new javax.swing.GroupLayout(pnlBills);
        pnlBills.setLayout(pnlBillsLayout);
        pnlBillsLayout.setHorizontalGroup(
            pnlBillsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBillsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlBillsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBillsLayout.setVerticalGroup(
            pnlBillsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBillsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        tbMenu.addTab("Bills", pnlBills);

        pnlTransaction.setBackground(new java.awt.Color(237, 247, 246));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel32.setText("Transactions History");
        jPanel10.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 17, -1, -1));

        jSeparator9.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));
        jPanel10.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 59, 650, 10));

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Method", "Recipient", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jPanel10.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 87, 640, 340));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel35.setText("Records");

        javax.swing.GroupLayout pnlTransactionLayout = new javax.swing.GroupLayout(pnlTransaction);
        pnlTransaction.setLayout(pnlTransactionLayout);
        pnlTransactionLayout.setHorizontalGroup(
            pnlTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTransactionLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        pnlTransactionLayout.setVerticalGroup(
            pnlTransactionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTransactionLayout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel35)
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        tbMenu.addTab("Transaction", pnlTransaction);

        pnlAccount.setBackground(new java.awt.Color(237, 247, 246));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel12.setPreferredSize(new java.awt.Dimension(670, 455));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel23.setText("Password");
        jPanel12.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 70, -1));

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setText("Mobile Number");
        jPanel12.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jSeparator7.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator7.setForeground(new java.awt.Color(0, 0, 0));
        jPanel12.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 59, 640, 10));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText(" Edit Information");
        jPanel12.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 21, 240, -1));

        txtAMobileNo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAMobileNo.setName(""); // NOI18N
        jPanel12.add(txtAMobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 287, 41));

        txtAUsername.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAUsername.setName(""); // NOI18N
        jPanel12.add(txtAUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 287, 41));

        btSaveEdit.setBackground(new java.awt.Color(53, 255, 105));
        btSaveEdit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btSaveEdit.setText("Save Changes");
        btSaveEdit.setBorderPainted(false);
        btSaveEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSaveEditActionPerformed(evt);
            }
        });
        jPanel12.add(btSaveEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 193, 39));

        txtAPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAPassword.setName(""); // NOI18N
        jPanel12.add(txtAPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 287, 41));

        jLabel63.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel63.setText("Username");
        jPanel12.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        btDeleteAccount.setBackground(new java.awt.Color(255, 51, 51));
        btDeleteAccount.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btDeleteAccount.setText("DELETE ACCOUNT");
        btDeleteAccount.setBorderPainted(false);
        btDeleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteAccountActionPerformed(evt);
            }
        });
        jPanel12.add(btDeleteAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 193, 39));

        jButton8.setBackground(new java.awt.Color(39, 93, 173));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("LOG OUT");
        jButton8.setBorderPainted(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, 193, 39));

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel22.setText("Profile");

        javax.swing.GroupLayout pnlAccountLayout = new javax.swing.GroupLayout(pnlAccount);
        pnlAccount.setLayout(pnlAccountLayout);
        pnlAccountLayout.setHorizontalGroup(
            pnlAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccountLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAccountLayout.setVerticalGroup(
            pnlAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAccountLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        tbMenu.addTab("Account", pnlAccount);

        frmMainWindow.getContentPane().add(tbMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 0, 770, 600));

        pnlNavigator.setBackground(new java.awt.Color(32, 30, 31));
        pnlNavigator.setPreferredSize(new java.awt.Dimension(800, 80));

        jPanel16.setBackground(new java.awt.Color(32, 30, 31));
        jPanel16.setForeground(new java.awt.Color(255, 255, 255));
        jPanel16.setPreferredSize(new java.awt.Dimension(115, 80));

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("CACHE");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel37)
                .addGap(16, 16, 16))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel37)
                .addGap(22, 22, 22))
        );

        pnlNavigator.add(jPanel16);

        jPanel17.setBackground(new java.awt.Color(32, 30, 31));
        jPanel17.setAlignmentY(50.0F);
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbtDashboard.setBackground(new java.awt.Color(32, 30, 31));
        buttonGroup1.add(tbtDashboard);
        tbtDashboard.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbtDashboard.setForeground(new java.awt.Color(255, 255, 255));
        tbtDashboard.setSelected(true);
        tbtDashboard.setText("Dashboard");
        tbtDashboard.setToolTipText("");
        tbtDashboard.setBorderPainted(false);
        tbtDashboard.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbtDashboard.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtDashboard.setMinimumSize(new java.awt.Dimension(0, 0));
        tbtDashboard.setPreferredSize(new java.awt.Dimension(115, 40));
        tbtDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtDashboardActionPerformed(evt);
            }
        });
        jPanel17.add(tbtDashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlNavigator.add(jPanel17);

        jPanel18.setBackground(new java.awt.Color(32, 30, 31));
        jPanel18.setLayout(new java.awt.BorderLayout());

        tbtSend.setBackground(new java.awt.Color(32, 30, 31));
        buttonGroup1.add(tbtSend);
        tbtSend.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbtSend.setForeground(new java.awt.Color(255, 255, 255));
        tbtSend.setText("Send");
        tbtSend.setBorderPainted(false);
        tbtSend.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtSend.setPreferredSize(new java.awt.Dimension(115, 40));
        tbtSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtSendActionPerformed(evt);
            }
        });
        jPanel18.add(tbtSend, java.awt.BorderLayout.CENTER);

        pnlNavigator.add(jPanel18);

        jPanel19.setBackground(new java.awt.Color(32, 30, 31));
        jPanel19.setLayout(new java.awt.BorderLayout());

        tbtDeposit.setBackground(new java.awt.Color(32, 30, 31));
        buttonGroup1.add(tbtDeposit);
        tbtDeposit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbtDeposit.setForeground(new java.awt.Color(255, 255, 255));
        tbtDeposit.setText("Deposit");
        tbtDeposit.setBorderPainted(false);
        tbtDeposit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtDeposit.setPreferredSize(new java.awt.Dimension(115, 40));
        tbtDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtDepositActionPerformed(evt);
            }
        });
        jPanel19.add(tbtDeposit, java.awt.BorderLayout.CENTER);

        pnlNavigator.add(jPanel19);

        jPanel20.setBackground(new java.awt.Color(32, 30, 31));
        jPanel20.setLayout(new java.awt.BorderLayout());

        tbtBills.setBackground(new java.awt.Color(32, 30, 31));
        buttonGroup1.add(tbtBills);
        tbtBills.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbtBills.setForeground(new java.awt.Color(255, 255, 255));
        tbtBills.setText("Bills");
        tbtBills.setBorderPainted(false);
        tbtBills.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtBills.setPreferredSize(new java.awt.Dimension(115, 40));
        tbtBills.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtBillsActionPerformed(evt);
            }
        });
        jPanel20.add(tbtBills, java.awt.BorderLayout.CENTER);

        pnlNavigator.add(jPanel20);

        jPanel21.setBackground(new java.awt.Color(32, 30, 31));
        jPanel21.setLayout(new java.awt.BorderLayout());

        tbtTransaction.setBackground(new java.awt.Color(32, 30, 31));
        buttonGroup1.add(tbtTransaction);
        tbtTransaction.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbtTransaction.setForeground(new java.awt.Color(255, 255, 255));
        tbtTransaction.setText("Transactions");
        tbtTransaction.setBorderPainted(false);
        tbtTransaction.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtTransaction.setPreferredSize(new java.awt.Dimension(115, 40));
        tbtTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtTransactionActionPerformed(evt);
            }
        });
        jPanel21.add(tbtTransaction, java.awt.BorderLayout.CENTER);

        pnlNavigator.add(jPanel21);

        jPanel22.setBackground(new java.awt.Color(32, 30, 31));
        jPanel22.setForeground(new java.awt.Color(255, 255, 255));
        jPanel22.setPreferredSize(new java.awt.Dimension(130, 180));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 180, Short.MAX_VALUE)
        );

        pnlNavigator.add(jPanel22);

        jPanel23.setBackground(new java.awt.Color(32, 30, 31));
        jPanel23.setLayout(new java.awt.BorderLayout());

        tbtAccount.setBackground(new java.awt.Color(32, 30, 31));
        buttonGroup1.add(tbtAccount);
        tbtAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbtAccount.setForeground(new java.awt.Color(255, 255, 255));
        tbtAccount.setText("Account");
        tbtAccount.setBorderPainted(false);
        tbtAccount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtAccount.setPreferredSize(new java.awt.Dimension(115, 40));
        tbtAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtAccountActionPerformed(evt);
            }
        });
        jPanel23.add(tbtAccount, java.awt.BorderLayout.CENTER);

        pnlNavigator.add(jPanel23);

        frmMainWindow.getContentPane().add(pnlNavigator, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -9, 130, 580));

        frmLogin.setBounds(new java.awt.Rectangle(0, 0, 320, 440));
        frmLogin.setLocation(new java.awt.Point(850, 230));
        frmLogin.setResizable(false);

        pnlLogIn.setBackground(new java.awt.Color(255, 255, 255));
        pnlLogIn.setPreferredSize(new java.awt.Dimension(350, 450));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 80));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 2, 18)); // NOI18N
        jLabel1.setText("LOG IN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel1)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pnlLogIn.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 200));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(230, 60));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Mobile Number");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtLMobileNo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtLMobileNo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtLMobileNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLMobileNoActionPerformed(evt);
            }
        });
        jPanel5.add(txtLMobileNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 230, 40));

        jPanel4.add(jPanel5);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Password");
        jPanel7.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtLPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtLPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel7.add(txtLPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 230, 40));

        jPanel4.add(jPanel7);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(230, 10));
        jPanel4.add(jPanel6);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(230, 50));

        btLLogin.setBackground(new java.awt.Color(53, 255, 105));
        btLLogin.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btLLogin.setText("LOG IN");
        btLLogin.setToolTipText("");
        btLLogin.setBorderPainted(false);
        btLLogin.setPreferredSize(new java.awt.Dimension(230, 40));
        btLLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLLoginActionPerformed(evt);
            }
        });
        jPanel8.add(btLLogin);

        jPanel4.add(jPanel8);

        pnlLogIn.add(jPanel4);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(300, 80));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Dont have an account yet?");

        btLSignup.setBackground(new java.awt.Color(39, 93, 173));
        btLSignup.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btLSignup.setForeground(new java.awt.Color(255, 255, 255));
        btLSignup.setText("SIGN UP");
        btLSignup.setBorderPainted(false);
        btLSignup.setPreferredSize(new java.awt.Dimension(230, 40));
        btLSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLSignupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(btLSignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btLSignup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlLogIn.add(jPanel9);

        javax.swing.GroupLayout frmLoginLayout = new javax.swing.GroupLayout(frmLogin.getContentPane());
        frmLogin.getContentPane().setLayout(frmLoginLayout);
        frmLoginLayout.setHorizontalGroup(
            frmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
            .addGroup(frmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmLoginLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        frmLoginLayout.setVerticalGroup(
            frmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 440, Short.MAX_VALUE)
            .addGroup(frmLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmLoginLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        frmSignUp.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frmSignUp.setBounds(new java.awt.Rectangle(0, 0, 320, 440));
        frmSignUp.setLocation(new java.awt.Point(850, 230));
        frmSignUp.setResizable(false);

        pnlSignUp.setBackground(new java.awt.Color(255, 255, 255));
        pnlSignUp.setPreferredSize(new java.awt.Dimension(350, 440));
        pnlSignUp.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setPreferredSize(new java.awt.Dimension(300, 80));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 2, 18)); // NOI18N
        jLabel5.setText("SIGN UP");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel5)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(22, 22, 22))
        );

        pnlSignUp.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));
        jPanel33.setPreferredSize(new java.awt.Dimension(300, 300));
        jPanel33.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));
        jPanel34.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel44.setText("User Name");
        jPanel34.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtSUsername.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSUsername.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtSUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSUsernameActionPerformed(evt);
            }
        });
        jPanel34.add(txtSUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 220, 40));

        jPanel33.add(jPanel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));
        jPanel37.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel48.setText("Password");
        jPanel37.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtSPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtSPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSPasswordActionPerformed(evt);
            }
        });
        jPanel37.add(txtSPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 220, 40));

        jPanel33.add(jPanel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        btSSignup.setBackground(new java.awt.Color(39, 93, 173));
        btSSignup.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btSSignup.setForeground(new java.awt.Color(255, 255, 255));
        btSSignup.setText("SIGN UP");
        btSSignup.setToolTipText("");
        btSSignup.setBorderPainted(false);
        btSSignup.setPreferredSize(new java.awt.Dimension(230, 40));
        btSSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSSignupActionPerformed(evt);
            }
        });
        jPanel33.add(btSSignup, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 220, -1));

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));
        jPanel41.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel49.setText("Mobile Number");
        jPanel41.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        txtSMobileNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSMobileNumber.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtSMobileNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSMobileNumberActionPerformed(evt);
            }
        });
        jPanel41.add(txtSMobileNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 220, 40));

        jPanel33.add(jPanel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 220, -1));

        pnlSignUp.add(jPanel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));
        jPanel40.setPreferredSize(new java.awt.Dimension(300, 80));

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 80, Short.MAX_VALUE)
        );

        pnlSignUp.add(jPanel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 395, -1, -1));

        javax.swing.GroupLayout frmSignUpLayout = new javax.swing.GroupLayout(frmSignUp.getContentPane());
        frmSignUp.getContentPane().setLayout(frmSignUpLayout);
        frmSignUpLayout.setHorizontalGroup(
            frmSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 332, Short.MAX_VALUE)
            .addGroup(frmSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmSignUpLayout.createSequentialGroup()
                    .addComponent(pnlSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        frmSignUpLayout.setVerticalGroup(
            frmSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 445, Short.MAX_VALUE)
            .addGroup(frmSignUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(frmSignUpLayout.createSequentialGroup()
                    .addComponent(pnlSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(250, 242, 235));
        setBounds(new java.awt.Rectangle(0, 0, 900, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 400));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBG.setBackground(new java.awt.Color(250, 242, 235));
        pnlBG.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlBG.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btSignUp.setBackground(new java.awt.Color(39, 93, 173));
        btSignUp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btSignUp.setForeground(new java.awt.Color(255, 255, 255));
        btSignUp.setText("SIGN UP");
        btSignUp.setToolTipText("");
        btSignUp.setBorderPainted(false);
        btSignUp.setPreferredSize(new java.awt.Dimension(230, 40));
        btSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSignUpActionPerformed(evt);
            }
        });
        pnlBG.add(btSignUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 390, 140, 40));

        btLogin.setBackground(new java.awt.Color(53, 255, 105));
        btLogin.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btLogin.setText("LOG IN");
        btLogin.setToolTipText("");
        btLogin.setBorderPainted(false);
        btLogin.setPreferredSize(new java.awt.Dimension(230, 40));
        btLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLoginActionPerformed(evt);
            }
        });
        pnlBG.add(btLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 140, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("secure, and easy.");
        pnlBG.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 370, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Effortlessly Manage");
        pnlBG.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Home     Services    Partners     Help Center");
        pnlBG.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Pera sa Iyong Kamay—Instant Cache sa Ating Wallet");
        pnlBG.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 370, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Whether you're sending money to loved ones, depositing funds,");
        pnlBG.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 370, -1));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("paying bills, or checking your account details, we make it fast,");
        pnlBG.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 370, -1));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Experience seamless money transactions with CACHE.");
        pnlBG.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 370, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Your Finances ");
        pnlBG.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("CACHE");
        pnlBG.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon("C:\\Users\\althea\\OneDrive\\Documents\\NetBeansProjects\\aringo\\src\\main\\java\\Images\\CACHE-1.png")); // NOI18N
        pnlBG.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 580));

        getContentPane().add(pnlBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 580));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>                        

    private void btSignUpActionPerformed(java.awt.event.ActionEvent evt) {                                         
        frmSignUp.setVisible(true);
        frmLogin.dispose();
        
    }                                        

    private void btLoginActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        frmLogin.setVisible(true);
        frmSignUp.dispose();
    }                                       

    private void btLLoginActionPerformed(java.awt.event.ActionEvent evt) {                                         
        String mobileNumber = txtLMobileNo.getText();
        String password = new String(txtLPassword.getPassword());

        if (mobileNumber.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter both mobile number and password.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //opened connection
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();
            connection = this.connection;
        }

        PreparedStatement stmt = null;
        ResultSet resultSet = null;

        try {
            if (connection == null) {
                JOptionPane.showMessageDialog(this, "Database connection is not established.",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // SQL query to check the user credentials
            String query = "SELECT tblAccount.U_Name, tblAccount.U_Password, tblAccount.U_Number, tblWallet.W_Balance " +
                           "FROM tblAccount " +
                           "JOIN tblWallet ON tblAccount.U_Number = tblWallet.U_Number " +
                           "WHERE tblAccount.U_Number = ? AND tblAccount.U_Password = ?";

            // Create PreparedStatement to avoid SQL injection
            stmt = connection.prepareStatement(query);
            stmt.setString(1, mobileNumber);
            stmt.setString(2, password);
            resultSet = stmt.executeQuery();

            // Check if the user exists and credentials are correct
            if (resultSet.next()) {
                User userInfo = new User();
                Account bal = new Account();           
                // Set user information from database
                userInfo.setName(resultSet.getString("U_Name"));
                userInfo.setPassword(resultSet.getString("U_Password"));
                userInfo.setMobileNumber(resultSet.getString("U_Number"));

                bal.setBalance(resultSet.getDouble("W_Balance"));

                // getter
                String username = userInfo.getName();
                String passWord = userInfo.getPassword();
                String mobileno = userInfo.getMobileNumber();
                double userBalance = bal.getBalance();

                // setter
                lblName.setText(username);
                txtAUsername.setText(username);
                txtAPassword.setText(passWord);
                txtAMobileNo.setText(mobileno);
                lblBalance.setText(String.valueOf(userBalance));

                // Manage frames
                frmMainWindow.setVisible(true);
                frmLogin.dispose();
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Login Failed: Invalid Mobile Number or Password",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error during database connection or query execution: " +
                    e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {            // Close resources to prevent memory leaks
            try {
                if (resultSet != null) resultSet.close();
                if (stmt != null) stmt.close();
                // Do not close connection here as it's managed in openDatabaseConnection
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error closing resources: " +
                        ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                        

    private void txtLMobileNoActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void radS200ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        txtAmount.setText("200");
    }                                       

    private void radS20ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        txtAmount.setText("20");
    }                                      

    private void radS50ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        txtAmount.setText("50");
    }                                      

    private void radS100ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        txtAmount.setText("100");
    }                                       

    private void radS500ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        txtAmount.setText("500");
    }                                       

    private void radS1000ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        txtAmount.setText("1000");
    }                                        

    private void cmbDepositMethodsActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        // TODO add your handling code here:
        String selectedCategory = (String) cmbDepositMethods.getSelectedItem();
        System.out.println("Selected Category: " + selectedCategory);
        cmbPartnerOutlet.removeAllItems();

        if ("Deposit Machines".equals(selectedCategory)) {
            cmbPartnerOutlet.addItem("eTap");
            cmbPartnerOutlet.addItem("TouchPay");
        } else if ("Conveniences Stores".equals(selectedCategory)) {
            cmbPartnerOutlet.addItem("7-Eleven");
            cmbPartnerOutlet.addItem("AlfaMart");
            cmbPartnerOutlet.addItem("Uncle John's");
        } else if ("Pawnshops".equals(selectedCategory)) {
            cmbPartnerOutlet.addItem("Cebuana");
            cmbPartnerOutlet.addItem("M Lhuillier");
            cmbPartnerOutlet.addItem("Palawan");
        } else if ("Sari-Sari Stores".equals(selectedCategory)) {
            cmbPartnerOutlet.addItem("GCash Pera Outlet");
        }
    }                                                 

    private void cmbPartnerOutletActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void radD1000ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        txtAmountDepo.setText("1000");
    }                                        

    private void radD100ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        txtAmountDepo.setText("100");
    }                                       

    private void radD500ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        txtAmountDepo.setText("500");
    }                                       

    private void radD50ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        txtAmountDepo.setText("50");
    }                                      

    private void radD200ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        txtAmountDepo.setText("200");
    }                                       

    private void radD20ActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        txtAmountDepo.setText("20");
    }                                      

    private void cmbBillerActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
    }                                         

    private void tbtDashboardActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(0);
        String username = txtAMobileNo.getText();
        
        TransactionService transactionService = new TransactionService();
        
        int walletId = transactionService.getWalletIdByMobileNumber(username);
        List<String[]> transactions = transactionService.getTransactionsByWalletId(walletId);

        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0);

        for (String[] row : transactions) {
            model1.addRow(row);
        }
    }                                            

    private void tbtSendActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here: have manually open the database here
        tbMenu.setSelectedIndex(1);
        
        String sbalance = lblBalance.getText();
        lblCurBal.setText("(Current Bal: " + sbalance + ")");
        
        String currentUserName = txtAUsername.getText();
    
        String url = "jdbc:mysql://localhost:3306/ewallet";
        String dbUser = "root";
        String dbPass = "Silver.pass1";

        Connection connection = null;
        PreparedStatement stmt = null;
        ResultSet resultSet = null;

        try {
            connection = DriverManager.getConnection(url, dbUser, dbPass);
            String query = "SELECT U_Name FROM tblAccount WHERE U_Name != ?";
            stmt = connection.prepareStatement(query);
            stmt.setString(1, currentUserName);
            resultSet = stmt.executeQuery();

            cmbSelectAccount.removeAllItems();
            
            // Add usernames to the combo box
            while (resultSet.next()) {
                String userName = resultSet.getString("U_Name");
                cmbSelectAccount.addItem(userName);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error during database connection or query execution: " +
                    e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (resultSet != null) resultSet.close();
                if (stmt != null) stmt.close();
                if (connection != null) connection.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error closing resources: " +
                        ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                       

    private void tbtDepositActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(2);
    }                                          

    private void tbtBillsActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(3);
        
        String sbalance = lblBalance.getText();
        lblCurBal1.setText("(Current Bal: " + sbalance + ")");
    }                                        

    private void tbtTransactionActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(4);
        
        String username = txtAMobileNo.getText();
        
        TransactionService transactionService = new TransactionService();
        
        int walletId = transactionService.getWalletIdByMobileNumber(username);
        List<String[]> transactions = transactionService.getTransactionsByWalletId(walletId);

        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0);

        for (String[] row : transactions) {
            model1.addRow(row);
        }
    }                                              

    private void tbtAccountActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(5);
    }                                          

    private void txtSUsernameActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void btSSignupActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        String userID = txtSMobileNumber.getText();
        String username = txtSUsername.getText();
        String password = new String(txtSPassword.getPassword());

        // Check if any field is empty
        if (userID.isEmpty() || username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter all credentials.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate mobile number (must be 11 digits)
        if (userID.length() != 11 || !userID.matches("\\d{11}")) {
            JOptionPane.showMessageDialog(this, "Mobile number must be exactly 11 digits.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // opened connection
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();
            connection = this.connection;
        }

        PreparedStatement stmtCheckUserID = null, stmtUser = null, stmtWallet = null;

        try {
            if (connection == null) {
                JOptionPane.showMessageDialog(this, "Database connection is not established.",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Start transaction
            connection.setAutoCommit(false);

            // SQL query to check if the mobile number already exists
            String checkUserIDQuery = "SELECT U_Number FROM tblAccount WHERE U_Number = ?";
            stmtCheckUserID = connection.prepareStatement(checkUserIDQuery);
            stmtCheckUserID.setString(1, userID);
            ResultSet resultSet = stmtCheckUserID.executeQuery();

            // If mobile number exists, show error message
            if (resultSet.next()) {
                JOptionPane.showMessageDialog(this, "Mobile number already exists. Please use a different number.",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // SQL query to insert the new user into tblAccount
            String queryUser = "INSERT INTO tblAccount (U_Number, U_Name, U_Password) VALUES (?, ?, ?)";
            stmtUser = connection.prepareStatement(queryUser);
            stmtUser.setString(1, userID);
            stmtUser.setString(2, username);
            stmtUser.setString(3, password);

            // Execute the insert for the user table
            int userRowsAffected = stmtUser.executeUpdate();

            // Check if the user insert was successful
            if (userRowsAffected > 0) {
                String queryWallet = "INSERT INTO tblWallet (U_Number, W_Balance) VALUES (?, 0.00)";
                stmtWallet = connection.prepareStatement(queryWallet);
                stmtWallet.setString(1, userID); 

                int walletRowsAffected = stmtWallet.executeUpdate();

                if (walletRowsAffected >= 0) {
                    connection.commit();

                    // Clear the fields
                    txtSMobileNumber.setText("");
                    txtSUsername.setText("");
                    txtSPassword.setText("");

                    // Close the sign-up form and show the login form
                    frmSignUp.dispose();
                    frmLogin.setVisible(true);

                    JOptionPane.showMessageDialog(this, "Sign-up successful!",
                            "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Error creating wallet.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Sign-up failed.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error during sign-up: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (stmtCheckUserID != null) stmtCheckUserID.close();
                if (stmtUser != null) stmtUser.close();
                if (stmtWallet != null) stmtWallet.close();
                if (connection != null) {
                    connection.setAutoCommit(true);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error closing resources: " +
                        ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                         

    private void txtSMobileNumberActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    private void btLSignupActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        frmSignUp.setVisible(true); // Show the original frame
        frmLogin.dispose();
    }                                         

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(4);
    }                                         

    private void ckbSendActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        if (ckbSend.isSelected()) {
            btSend.setEnabled(true);
        } else {
            btSend.setEnabled(false);
        }
    }                                       

    private void ckbDepositActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        if (ckbDeposit.isSelected()) {
            btDeposit.setEnabled(true);
        } else {
            btDeposit.setEnabled(false);
        }
    }                                          

    private void cmbBillsActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here: 
        String selectedCategory = (String) cmbBills.getSelectedItem();
        System.out.println("Selected Category: " + selectedCategory);
        cmbBiller.removeAllItems();
        
        if ("Electric Utilities".equals(selectedCategory)) {
            cmbBiller.addItem("Meralco");
            cmbBiller.addItem("Quezelco");
        } else if ("Water Utilities".equals(selectedCategory)) {
            cmbBiller.addItem("Prime-Water");
            cmbBiller.addItem("Quezon Metropolitan");
        } else if ("Internet".equals(selectedCategory)) {
            cmbBiller.addItem("Asian Vision");
            cmbBiller.addItem("PLDT");
            cmbBiller.addItem("Converge");
        } else if ("Schools".equals(selectedCategory)) {
            cmbBiller.addItem("MSEUF");
            cmbBiller.addItem("CEFI");
        }
    }                                        

    private void btDeleteAccountActionPerformed(java.awt.event.ActionEvent evt) {                                                
        // TODO add your handling code here:
        String mobileNumber = txtAMobileNo.getText();

        //opened connection
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();
            connection = this.connection;
        }

        PreparedStatement stmt = null;

        int userChoice = JOptionPane.showConfirmDialog(
                null,
                "Are you sure you want to delete your account?",
                "Delete Account",
                JOptionPane.YES_NO_OPTION
        );

        if (userChoice == JOptionPane.YES_OPTION) {
            try {
                if (connection == null) {
                    JOptionPane.showMessageDialog(null, "Database connection is not established.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Delete related records from dependent tables
                String deleteTransactions = "DELETE FROM tblTransaction WHERE W_ID IN (SELECT W_ID FROM tblWallet WHERE U_Number = ?)";
                stmt = connection.prepareStatement(deleteTransactions);
                stmt.setString(1, mobileNumber);
                stmt.executeUpdate();

                String deleteWallet = "DELETE FROM tblWallet WHERE U_Number = ?";
                stmt = connection.prepareStatement(deleteWallet);
                stmt.setString(1, mobileNumber);
                stmt.executeUpdate();

                // Delete account record
                String deleteAccount = "DELETE FROM tblAccount WHERE U_Number = ?";
                stmt = connection.prepareStatement(deleteAccount);
                stmt.setString(1, mobileNumber);
                int rowsDeleted = stmt.executeUpdate();

                if (rowsDeleted > 0) {
                    JOptionPane.showMessageDialog(null, "Your account has been successfully deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    frmMainWindow.dispose();
                    Finals landing = new Finals();
                    landing.setVisible(true);
                }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    if (stmt != null) stmt.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }                                               

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        Finals landing = new Finals(); 
        landing.setVisible(true);
        frmMainWindow.dispose();
    }                                        

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        tbMenu.setSelectedIndex(2);
    }                                         

    private void txtAmountDepoActionPerformed(java.awt.event.ActionEvent evt) {                                              
 
    }                                             

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
//        
    }                                         

    private void cmbSelectAccountActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
        String selectedUserName = (String) cmbSelectAccount.getSelectedItem();

        // Proceed only if a valid username is selected
        if (selectedUserName != null && !selectedUserName.isEmpty()) {

            //opened connection
            Connection connection = this.connection;
            if (connection == null) {
                openDatabaseConnection();
                connection = this.connection;
            }

            PreparedStatement stmt = null;
            ResultSet resultSet = null;

            try {
                // SQL query to fetch the U_Number based on the selected username
                String query = "SELECT U_Number FROM tblAccount WHERE U_Name = ?";

                // Create PreparedStatement to prevent SQL injection
                stmt = connection.prepareStatement(query);
                stmt.setString(1, selectedUserName);

                resultSet = stmt.executeQuery();

                if (resultSet.next()) {
                    String uNumber = resultSet.getString("U_Number");
                    txtSNumber.setText(uNumber);
                } else {
                    JOptionPane.showMessageDialog(this, "No account found for the selected username.",
                            "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error during database connection or query execution: " +
                        e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    if (resultSet != null) resultSet.close();
                    if (stmt != null) stmt.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error closing resources: " +
                            ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }                                                

    private void btSContinueActionPerformed(java.awt.event.ActionEvent evt) {                                            
        String selectedUserName = (String) cmbSelectAccount.getSelectedItem();
        String sNumber = txtSNumber.getText();
        String amountText = txtAmount.getText();
        double amount = 0.00;

        //converts to double and validate that it is a num
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid amount.",
                    "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validate the amount
        if (amount <= 0) {
            JOptionPane.showMessageDialog(this, "Amount must be greater than 0.",
                    "Invalid Amount", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Balance from dashboard
        String sbalance = lblBalance.getText();
        double balance = 0.00;
        balance = Double.parseDouble(sbalance);
       
        // Check if the user has sufficient balance
        if (balance < amount) {
            JOptionPane.showMessageDialog(null, "Insufficient Balance",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {            
            String message = "\nName:   " + selectedUserName + 
                             "\nMobile Number:  " + sNumber + 
                             "\nAmount: " + amount;

            
            ckbSend.setEnabled(true);
            txtAreaSend.setText(message); 
        }
        
    }                                           

    private void btDepositActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // getting info
        String username = txtAMobileNo.getText();
        String partnerOutlet = (String) cmbPartnerOutlet.getSelectedItem();
        String amountText = txtAmountDepo.getText();
        double amount = 0.0;

        //converts to double
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid amount.",
                    "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Balance from dashboard
        String sbalance = lblBalance.getText();
        double balance = 0.00;
        balance = Double.parseDouble(sbalance);
        
        //opened connection
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();  // Reopen the connection if it was closed
            connection = this.connection;
        }

        Account account = new Account();
        account.setBalance(balance);

        TransactionService transactionService = new TransactionService();
        // Get wallet ID using the mobile number
        int receiverWalletId = transactionService.getWalletIdByMobileNumber(username);

        if (receiverWalletId != -1) {
            //Abstraction
            Payment deposit = new Deposit(amount);
            // Polymorphism
            deposit.pay(account);
            //saving transaction to the senders/receiver account in the db
            transactionService.saveTransaction(receiverWalletId, deposit);
            //updating users wallet balance
            transactionService.depositTransact(receiverWalletId, amount);

            //setter
            lblBalance.setText(String.format("%.2f", account.getBalance()));
            lblCurBal.setText(String.format("%.2f", account.getBalance()));
            txtAreaDeposit.setText("");
            ckbDeposit.setSelected(false);
            ckbDeposit.setEnabled(false);
            btDeposit.setEnabled(false);
        }

        JOptionPane.showMessageDialog(this, "Transaction successful!", 
                "Success", JOptionPane.INFORMATION_MESSAGE);

        // Updating the transaction history by getting the users wallet id to the table
        int walletId = transactionService.getWalletIdByMobileNumber(username);
        List<String[]> transactions = transactionService.getTransactionsByWalletId(walletId);

        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0); 
        for (String[] row : transactions) {
            model1.addRow(row);
        }

        // adding the transaction history to the table in Dashboard
        String[] rowData = {"In", "Deposit", partnerOutlet, String.format("%.2f", amount)
        };
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.addRow(rowData);
    }                                         

    private void btDContinueActionPerformed(java.awt.event.ActionEvent evt) {                                            
        String parnerOutlet = (String) cmbPartnerOutlet.getSelectedItem();
        String amountText = txtAmountDepo.getText();
        double amount = 0.00;

        //converts to double and validate that it is a num
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid amount.",
                    "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validate the amount
        if (amount <= 0) {
            JOptionPane.showMessageDialog(this, "Amount must be greater than 0.",
                    "Invalid Amount", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String message = "Partner Outlet: " + parnerOutlet +
                "\nAmount: " + amount;
            
            ckbDeposit.setEnabled(true);
            txtAreaDeposit.setText(message); 
        
    }                                           

    private void btBContinueActionPerformed(java.awt.event.ActionEvent evt) {                                            
        String bill = (String) cmbBills.getSelectedItem();
        String biller = (String) cmbBiller.getSelectedItem();
        String ANumber = txtAccountNo.getText();
        String amountText = txtAmountBills.getText();
        double amount = 0.00;

        //converts to double and validate that it is a num
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid amount.",
                    "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validate the amount
        if (amount <= 0) {
            JOptionPane.showMessageDialog(this, "Amount must be greater than 0.",
                    "Invalid Amount", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //Balance from dashboard
        String sbalance = lblBalance.getText();
        double balance = 0.00;
        balance = Double.parseDouble(sbalance);

        // Check if the user has sufficient balanced
        if (balance < amount) {
            JOptionPane.showMessageDialog(null, "Insufficient Balance",
                    "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String message = "Categories:   " + bill +
                    "\nBiller:    " + biller +
                    "\nAccount Number:  " + ANumber + 
                    "\nAmount:  " + amount;
            
            ckbPaybills.setEnabled(true);
            txtAreaBills.setText(message); 
        }
    }                                           

    private void ckbPaybillsActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        if (ckbPaybills.isSelected()) {
            btPaybills.setEnabled(true);
        } else {
            btPaybills.setEnabled(false);
        }
    }                                           

    private void btPaybillsActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // getting info
        String username = txtAMobileNo.getText();
        String biller = cmbBiller.getSelectedItem().toString();
        String amountText = txtAmountBills.getText();
        double amount = 0.0;

        //converts to double
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid amount.",
                    "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String sbalance = lblBalance.getText();
        double balance = 0.00;

        //converts to double
        try {
            balance = Double.parseDouble(sbalance);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid balance format.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        

        // Apply protection fee if checkbox is selected
        if (ckbProtectFee.isSelected()) {
            amount += amount * 0.02; // 2% fee
        }
        
        // Open a database connection if not already open
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();  // Reopen connection if it was closed
            connection = this.connection;
        }
        Account account = new Account();
        account.setBalance(balance);

        TransactionService transactionService = new TransactionService();
        // Get wallet ID using the mobile number
        int walletId = transactionService.getWalletIdByMobileNumber(username);

        if (walletId != -1) {
            //Abstraction
            Payment payBills = new PayBills(biller, amount);
            // Polymorphism
            payBills.pay(account);
            //saving transaction to the senders account in the db
            transactionService.saveTransaction(walletId, payBills);
            //updating senders/receiver wallet balance
            transactionService.updateWalletBalance(walletId, account.getBalance());

            //setter
            lblBalance.setText(String.format("%.2f", account.getBalance()));
            lblCurBal1.setText(String.format("%.2f", account.getBalance()));
            txtAreaBills.setText("");
            ckbPaybills.setSelected(false);
            ckbPaybills.setEnabled(false);
            btPaybills.setEnabled(false);
        }
        JOptionPane.showMessageDialog(this, "Transaction successful!", 
                    "Success", JOptionPane.INFORMATION_MESSAGE);

        // Updating the transaction history to the table
        List<String[]> transactions = transactionService.getTransactionsByWalletId(walletId);

        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0); 
        for (String[] row : transactions) {
            model1.addRow(row);
        }

        // adding the transaction history to the table in Dashboard
        String[] rowData = {"Out","Pay Bills",biller,String.format("%.2f", amount)
        };
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.addRow(rowData);
    }                                          

    private void btSendActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // getting info
        String username = txtAMobileNo.getText();
        String selectedUserName = (String) cmbSelectAccount.getSelectedItem();
        String receiverNo = txtSNumber.getText();
        String amountText = txtAmount.getText();
        double amount = 0.00;

        //converts to double and validate that it is a num
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid amount.",
                    "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Balance from dashboard
        String sbalance = lblBalance.getText();
        double balance = 0.00;
        balance = Double.parseDouble(sbalance);

        //opened connection
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();
            connection = this.connection;
        }

        Account account = new Account();
        account.setBalance(balance);
        
        TransactionService transactionService = new TransactionService();
        // Get wallet ID using the mobile number
        int receiverWalletId = transactionService.getWalletIdByMobileNumber(receiverNo);
        int senderWalletId = transactionService.getWalletIdByMobileNumber(username);

        if (receiverWalletId != -1) {
            //Abstraction
            Payment sendMoney = new SendMoney(selectedUserName, amount);
            // Polymorphism
            sendMoney.pay(account);
            //saving transaction to the senders/receiver account in the db
            transactionService.saveTransaction(receiverWalletId, sendMoney);
            transactionService.saveTransaction(senderWalletId, sendMoney);
            //updating senders/receiver wallet balance
            transactionService.processTransaction(senderWalletId, receiverWalletId, amount);

            //setter
            lblBalance.setText(String.format("%.2f", account.getBalance()));
            lblCurBal.setText(String.format("%.2f", account.getBalance()));
            txtAreaSend.setText("");
            ckbSend.setSelected(false);
            ckbSend.setEnabled(false);
            btSend.setEnabled(false);
        }   
        JOptionPane.showMessageDialog(this, "Transaction successful!", 
                    "Success", JOptionPane.INFORMATION_MESSAGE);

        // Updating the transaction history to the table
        List<String[]> transactions = transactionService.getTransactionsByWalletId(senderWalletId);

        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0);
        for (String[] row : transactions) {
            model1.addRow(row);
        }

        // adding the transaction history to the table in Dashboard
        String[] rowData = { "Out", "Send Money", selectedUserName, String.format("%.2f", amount)
        };
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.addRow(rowData);  
    }                                      

    private void txtSPasswordActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void btSaveEditActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        String mobileNumber = txtAMobileNo.getText();
        String username = txtAUsername.getText();
        String password = txtAPassword.getText();

        lblName.setText(username);

        // Check if fields are empty
        if (mobileNumber.isEmpty() || username.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill the needed data.",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //opened connection
        Connection connection = this.connection;
        if (connection == null) {
            openDatabaseConnection();
            connection = this.connection;
        }

        PreparedStatement stmt = null;

        try {
            if (connection == null) {
                JOptionPane.showMessageDialog(this, "Database connection is not established.",
                        "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // SQL query to update the user information
            String query = "UPDATE tblAccount SET U_Name = ?, U_Password = ? WHERE U_Number = ?";

            // Create PreparedStatement to avoid SQL injection
            stmt = connection.prepareStatement(query);
            stmt.setString(1, username);
            stmt.setString(2, password);
            stmt.setString(3, mobileNumber);

            int rowsUpdated = stmt.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Account updated successfully!",
                        "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Update failed. Please check the credentials.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (stmt != null) stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }                                          

    private void frmMainWindowWindowClosing(java.awt.event.WindowEvent evt) {                                            
        // TODO add your handling code here:
        try {
            if (connection != null) {
                connection.close();
                System.out.println("Database connection closed.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing database connection: " +
                    ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                           

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        // TODO add your handling code here:
        try {
            if (connection != null) {
                connection.close();
                System.out.println("Database connection closed.");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error closing database connection: " +
                    ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                  

    private void txtSNumberActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        
        //Flatlaf
        try {
            UIManager.setLookAndFeel( new FlatLightLaf());
//            UIManager.put("Button.arc", 35); 
//            UIManager.put("Button.background", new Color(133,198,192)); 

        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Finals().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify                     
    private javax.swing.JButton btBContinue;
    private javax.swing.JButton btDContinue;
    private javax.swing.JButton btDeleteAccount;
    private javax.swing.JButton btDeposit;
    private javax.swing.JButton btLLogin;
    private javax.swing.JButton btLSignup;
    private javax.swing.JButton btLogin;
    private javax.swing.JButton btPaybills;
    private javax.swing.JButton btSContinue;
    private javax.swing.JButton btSSignup;
    private javax.swing.JButton btSaveEdit;
    private javax.swing.JButton btSend;
    private javax.swing.JButton btSignUp;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JCheckBox ckbDeposit;
    private javax.swing.JCheckBox ckbPaybills;
    private javax.swing.JCheckBox ckbProtectFee;
    private javax.swing.JCheckBox ckbSend;
    private javax.swing.JComboBox<String> cmbBiller;
    private javax.swing.JComboBox<String> cmbBills;
    private javax.swing.JComboBox<String> cmbDepositMethods;
    private javax.swing.JComboBox<String> cmbPartnerOutlet;
    private javax.swing.JComboBox<String> cmbSelectAccount;
    private javax.swing.JFrame frmLogin;
    private javax.swing.JFrame frmMainWindow;
    private javax.swing.JFrame frmSignUp;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JLabel lblCurBal;
    private javax.swing.JLabel lblCurBal1;
    private javax.swing.JLabel lblName;
    private javax.swing.JPanel pnlAccount;
    private javax.swing.JPanel pnlBG;
    private javax.swing.JPanel pnlBills;
    private javax.swing.JPanel pnlDashBoard;
    private javax.swing.JPanel pnlDeposit;
    private javax.swing.JPanel pnlLogIn;
    private javax.swing.JPanel pnlNavigator;
    private javax.swing.JPanel pnlSSummary;
    private javax.swing.JPanel pnlSend;
    private javax.swing.JPanel pnlSignUp;
    private javax.swing.JPanel pnlTransaction;
    private javax.swing.JRadioButton radD100;
    private javax.swing.JRadioButton radD1000;
    private javax.swing.JRadioButton radD20;
    private javax.swing.JRadioButton radD200;
    private javax.swing.JRadioButton radD50;
    private javax.swing.JRadioButton radD500;
    private javax.swing.JRadioButton radS100;
    private javax.swing.JRadioButton radS1000;
    private javax.swing.JRadioButton radS20;
    private javax.swing.JRadioButton radS200;
    private javax.swing.JRadioButton radS50;
    private javax.swing.JRadioButton radS500;
    private javax.swing.JTabbedPane tbMenu;
    private javax.swing.JToggleButton tbtAccount;
    private javax.swing.JToggleButton tbtBills;
    private javax.swing.JToggleButton tbtDashboard;
    private javax.swing.JToggleButton tbtDeposit;
    private javax.swing.JToggleButton tbtSend;
    private javax.swing.JToggleButton tbtTransaction;
    private javax.swing.JTextField txtAMobileNo;
    private javax.swing.JTextField txtAPassword;
    private javax.swing.JTextField txtAUsername;
    private javax.swing.JTextField txtAccountNo;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtAmountBills;
    private javax.swing.JTextField txtAmountDepo;
    private javax.swing.JTextArea txtAreaBills;
    private javax.swing.JTextArea txtAreaDeposit;
    private javax.swing.JTextArea txtAreaSend;
    private javax.swing.JTextField txtLMobileNo;
    private javax.swing.JPasswordField txtLPassword;
    private javax.swing.JTextField txtSMobileNumber;
    private javax.swing.JTextField txtSNumber;
    private javax.swing.JPasswordField txtSPassword;
    private javax.swing.JTextField txtSUsername;
    // End of variables declaration                   
}
